#!/usr/bin/env ruby

# Copyright 2019 Ismo Kärkkäinen
# Licensed under Universal Permissive License. See License.txt.

require 'json'
require 'pathname'

if ARGV.length == 0 or (ARGV.length > 0 and ARGV.length % 2 != 0)
  STDERR.puts "Usage: input2mapped key file ..."
  STDERR.puts "  Saves each key:value pair value in input JSON object to file."
  STDERR.puts "  Directories are created if file seems to contain them."
  exit 1
end

map = Hash[ARGV.each_slice(2).to_a]

begin
  obj = JSON.parse(STDIN.read)
rescue JSON::ParserError
  STDERR.puts "Error parsing input."
  exit 2
end

failed = false
obj.each_pair do |key, value|
  next if map.has_key? key
  STDERR.puts "Missing file name for key: #{key}"
  failed = true
end
exit(1) if failed

obj.each_pair do |key, value|
  file = map[key]
  fp = Pathname.new file
  dn = fp.dirname
  begin
    dn.mkpath
  rescue Errno::EEXIST
    STDERR.puts "Failed to create key #{key} path in #{file}"
    exit 3
  end
  begin
    fp.open('w') do |f|
      f.write value.to_json
    end
  rescue Errno::EACCES, Errno::ENOTDIR, Errno::ENOENT
    STDERR.puts "Failed to write key #{key} to #{file}"
    exit 3
  end
end
