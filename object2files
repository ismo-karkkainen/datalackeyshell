#!/usr/bin/env ruby

# Copyright 2019 Ismo Kärkkäinen
# Licensed under Universal Permissive License. See License.txt.

require 'json'
require 'pathname'

if ARGV.length > 0 and ARGV.length % 2 != 0
  STDERR.puts %q(Usage: object2files [key filename ...]
  Saves each key:value pair value in input JSON object to file.
  File name is either taken from arguments, or key is used as is.
  Directories are created if filename seems to contain them.
  Unused key/filename argument pairs are ignored.)
  exit 1
end

map = ARGV.empty? ? {} : Hash[ARGV.each_slice(2).to_a]

begin
  obj = JSON.parse(STDIN.read)
rescue JSON::ParserError
  STDERR.puts "Error parsing input."
  exit 2
end

obj.each_pair do |key, value|
  file = map.fetch(key, key)
  fp = Pathname.new file
  dn = fp.dirname
  begin
    dn.mkpath
  rescue Errno::EEXIST
    STDERR.puts "Failed to create key #{key} path in #{file}"
    exit 3
  end
  begin
    fp.open('w') do |f|
      f.write value.to_json
    end
  rescue Errno::EACCES, Errno::ENOTDIR, Errno::ENOENT
    STDERR.puts "Failed to write key #{key} to #{file}"
    exit 3
  end
end
